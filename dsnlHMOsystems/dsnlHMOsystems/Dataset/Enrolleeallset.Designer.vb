'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Enrolleeallset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Enrolleeallset
    Inherits Global.System.Data.DataSet
    
    Private tableenrolleetab As enrolleetabDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("enrolleetab")) Is Nothing) Then
                MyBase.Tables.Add(New enrolleetabDataTable(ds.Tables("enrolleetab")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property enrolleetab() As enrolleetabDataTable
        Get
            Return Me.tableenrolleetab
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Enrolleeallset = CType(MyBase.Clone, Enrolleeallset)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("enrolleetab")) Is Nothing) Then
                MyBase.Tables.Add(New enrolleetabDataTable(ds.Tables("enrolleetab")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableenrolleetab = CType(MyBase.Tables("enrolleetab"), enrolleetabDataTable)
        If (initTable = True) Then
            If (Not (Me.tableenrolleetab) Is Nothing) Then
                Me.tableenrolleetab.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "Enrolleeallset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Enrolleeallset.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableenrolleetab = New enrolleetabDataTable()
        MyBase.Tables.Add(Me.tableenrolleetab)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeenrolleetab() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Enrolleeallset = New Enrolleeallset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub enrolleetabRowChangeEventHandler(ByVal sender As Object, ByVal e As enrolleetabRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class enrolleetabDataTable
        Inherits Global.System.Data.TypedTableBase(Of enrolleetabRow)

        Private columnenrolleeid As Global.System.Data.DataColumn

        Private columnSurname As Global.System.Data.DataColumn

        Private columnFirstname As Global.System.Data.DataColumn

        Private columnothernames As Global.System.Data.DataColumn

        Private columnsex As Global.System.Data.DataColumn

        Private columnMaritalstatus As Global.System.Data.DataColumn

        Private columntitle As Global.System.Data.DataColumn

        Private columnhaddress As Global.System.Data.DataColumn

        Private columnage As Global.System.Data.DataColumn

        Private columndofb As Global.System.Data.DataColumn

        Private columntel As Global.System.Data.DataColumn

        Private columnemail As Global.System.Data.DataColumn

        Private columndregister As Global.System.Data.DataColumn

        Private columnsdate As Global.System.Data.DataColumn

        Private columnedate As Global.System.Data.DataColumn

        Private columnactive As Global.System.Data.DataColumn

        Private columnnationalid As Global.System.Data.DataColumn

        Private columnNHIS As Global.System.Data.DataColumn

        Private columnogaid As Global.System.Data.DataColumn

        Private columnogaloc As Global.System.Data.DataColumn

        Private columnppicture As Global.System.Data.DataColumn

        Private columnspicture As Global.System.Data.DataColumn

        Private columnchildpix1 As Global.System.Data.DataColumn

        Private columnchildpix2 As Global.System.Data.DataColumn

        Private columnchildpix3 As Global.System.Data.DataColumn

        Private columnchildpix4 As Global.System.Data.DataColumn

        Private columnotherillness As Global.System.Data.DataColumn

        Private columnillness1 As Global.System.Data.DataColumn

        Private columnillness2 As Global.System.Data.DataColumn

        Private columnillness3 As Global.System.Data.DataColumn

        Private columnillness4 As Global.System.Data.DataColumn

        Private columnillness5 As Global.System.Data.DataColumn

        Private columnillness6 As Global.System.Data.DataColumn

        Private columnillness7 As Global.System.Data.DataColumn

        Private columnillness8 As Global.System.Data.DataColumn

        Private columnillness9 As Global.System.Data.DataColumn

        Private columnillness10 As Global.System.Data.DataColumn

        Private columnillness11 As Global.System.Data.DataColumn

        Private columnillness12 As Global.System.Data.DataColumn

        Private columnillness13 As Global.System.Data.DataColumn

        Private columnillness14 As Global.System.Data.DataColumn

        Private columnillness15 As Global.System.Data.DataColumn

        Private columnillness16 As Global.System.Data.DataColumn

        Private columnillness17 As Global.System.Data.DataColumn

        Private columnillness18 As Global.System.Data.DataColumn

        Private columnillness19 As Global.System.Data.DataColumn

        Private columnillness20 As Global.System.Data.DataColumn

        Private columnhcpid As Global.System.Data.DataColumn

        Private columnhcpname As Global.System.Data.DataColumn

        Private columnhcpaddress As Global.System.Data.DataColumn

        Private columnhcplga As Global.System.Data.DataColumn

        Private columnsectortype As Global.System.Data.DataColumn

        Private columnhplan As Global.System.Data.DataColumn

        Private columnpnetwork As Global.System.Data.DataColumn

        Private columnugplan As Global.System.Data.DataColumn

        Private columnugmfees As Global.System.Data.DataColumn

        Private columnugyfees As Global.System.Data.DataColumn

        Private columnugstodate As Global.System.Data.DataColumn

        Private columnugbalance As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "enrolleetab"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property enrolleeidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnenrolleeid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SurnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FirstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property othernamesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnothernames
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property sexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsex
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MaritalstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaritalstatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property haddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhaddress
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnage
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property dofbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndofb
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property telColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntel
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property dregisterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndregister
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property sdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsdate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property edateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnedate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property activeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactive
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property nationalidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnationalid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NHISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNHIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ogaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogaid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ogalocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogaloc
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ppictureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnppicture
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property spictureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspicture
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property childpix1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnchildpix1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property childpix2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnchildpix2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property childpix3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnchildpix3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property childpix4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnchildpix4
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property otherillnessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnotherillness
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness4
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness5
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness6
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness7
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness8
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness9
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness10
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness11
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness12
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness13
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness14
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness15
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness16
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness17
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness18
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness19
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property illness20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnillness20
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property hcpidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhcpid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property hcpnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhcpname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property hcpaddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhcpaddress
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property hcplgaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhcplga
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property sectortypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsectortype
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property hplanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhplan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property pnetworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpnetwork
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ugplanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnugplan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ugmfeesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnugmfees
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ugyfeesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnugyfees
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ugstodateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnugstodate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ugbalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnugbalance
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As enrolleetabRow
            Get
                Return CType(Me.Rows(index), enrolleetabRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event enrolleetabRowChanging As enrolleetabRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event enrolleetabRowChanged As enrolleetabRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event enrolleetabRowDeleting As enrolleetabRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event enrolleetabRowDeleted As enrolleetabRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddenrolleetabRow(ByVal row As enrolleetabRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddenrolleetabRow( _
                    ByVal enrolleeid As String, _
                    ByVal Surname As String, _
                    ByVal Firstname As String, _
                    ByVal othernames As String, _
                    ByVal sex As String, _
                    ByVal Maritalstatus As String, _
                    ByVal title As String, _
                    ByVal haddress As String, _
                    ByVal age As String, _
                    ByVal dofb As Date, _
                    ByVal tel As String, _
                    ByVal email As String, _
                    ByVal dregister As Date, _
                    ByVal sdate As Date, _
                    ByVal edate As Date, _
                    ByVal active As Boolean, _
                    ByVal nationalid As String, _
                    ByVal NHIS As String, _
                    ByVal ogaid As String, _
                    ByVal ogaloc As String, _
                    ByVal ppicture As String, _
                    ByVal spicture As String, _
                    ByVal childpix1 As String, _
                    ByVal childpix2 As String, _
                    ByVal childpix3 As String, _
                    ByVal childpix4 As String, _
                    ByVal otherillness As String, _
                    ByVal illness1 As Boolean, _
                    ByVal illness2 As Boolean, _
                    ByVal illness3 As Boolean, _
                    ByVal illness4 As Boolean, _
                    ByVal illness5 As Boolean, _
                    ByVal illness6 As Boolean, _
                    ByVal illness7 As Boolean, _
                    ByVal illness8 As Boolean, _
                    ByVal illness9 As Boolean, _
                    ByVal illness10 As Boolean, _
                    ByVal illness11 As Boolean, _
                    ByVal illness12 As Boolean, _
                    ByVal illness13 As Boolean, _
                    ByVal illness14 As Boolean, _
                    ByVal illness15 As Boolean, _
                    ByVal illness16 As Boolean, _
                    ByVal illness17 As Boolean, _
                    ByVal illness18 As Boolean, _
                    ByVal illness19 As Boolean, _
                    ByVal illness20 As Boolean, _
                    ByVal hcpid As String, _
                    ByVal hcpname As String, _
                    ByVal hcpaddress As String, _
                    ByVal hcplga As String, _
                    ByVal sectortype As String, _
                    ByVal hplan As String, _
                    ByVal pnetwork As String, _
                    ByVal ugplan As String, _
                    ByVal ugmfees As Decimal, _
                    ByVal ugyfees As Decimal, _
                    ByVal ugstodate As Decimal, _
                    ByVal ugbalance As Decimal) As enrolleetabRow
            Dim rowenrolleetabRow As enrolleetabRow = CType(Me.NewRow, enrolleetabRow)
            Dim columnValuesArray() As Object = New Object() {enrolleeid, Surname, Firstname, othernames, sex, Maritalstatus, title, haddress, age, dofb, tel, email, dregister, sdate, edate, active, nationalid, NHIS, ogaid, ogaloc, ppicture, spicture, childpix1, childpix2, childpix3, childpix4, otherillness, illness1, illness2, illness3, illness4, illness5, illness6, illness7, illness8, illness9, illness10, illness11, illness12, illness13, illness14, illness15, illness16, illness17, illness18, illness19, illness20, hcpid, hcpname, hcpaddress, hcplga, sectortype, hplan, pnetwork, ugplan, ugmfees, ugyfees, ugstodate, ugbalance}
            rowenrolleetabRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowenrolleetabRow)
            Return rowenrolleetabRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByenrolleeid(ByVal enrolleeid As String) As enrolleetabRow
            Return CType(Me.Rows.Find(New Object() {enrolleeid}), enrolleetabRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As enrolleetabDataTable = CType(MyBase.Clone, enrolleetabDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New enrolleetabDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnenrolleeid = MyBase.Columns("enrolleeid")
            Me.columnSurname = MyBase.Columns("Surname")
            Me.columnFirstname = MyBase.Columns("Firstname")
            Me.columnothernames = MyBase.Columns("othernames")
            Me.columnsex = MyBase.Columns("sex")
            Me.columnMaritalstatus = MyBase.Columns("Maritalstatus")
            Me.columntitle = MyBase.Columns("title")
            Me.columnhaddress = MyBase.Columns("haddress")
            Me.columnage = MyBase.Columns("age")
            Me.columndofb = MyBase.Columns("dofb")
            Me.columntel = MyBase.Columns("tel")
            Me.columnemail = MyBase.Columns("email")
            Me.columndregister = MyBase.Columns("dregister")
            Me.columnsdate = MyBase.Columns("sdate")
            Me.columnedate = MyBase.Columns("edate")
            Me.columnactive = MyBase.Columns("active")
            Me.columnnationalid = MyBase.Columns("nationalid")
            Me.columnNHIS = MyBase.Columns("NHIS")
            Me.columnogaid = MyBase.Columns("ogaid")
            Me.columnogaloc = MyBase.Columns("ogaloc")
            Me.columnppicture = MyBase.Columns("ppicture")
            Me.columnspicture = MyBase.Columns("spicture")
            Me.columnchildpix1 = MyBase.Columns("childpix1")
            Me.columnchildpix2 = MyBase.Columns("childpix2")
            Me.columnchildpix3 = MyBase.Columns("childpix3")
            Me.columnchildpix4 = MyBase.Columns("childpix4")
            Me.columnotherillness = MyBase.Columns("otherillness")
            Me.columnillness1 = MyBase.Columns("illness1")
            Me.columnillness2 = MyBase.Columns("illness2")
            Me.columnillness3 = MyBase.Columns("illness3")
            Me.columnillness4 = MyBase.Columns("illness4")
            Me.columnillness5 = MyBase.Columns("illness5")
            Me.columnillness6 = MyBase.Columns("illness6")
            Me.columnillness7 = MyBase.Columns("illness7")
            Me.columnillness8 = MyBase.Columns("illness8")
            Me.columnillness9 = MyBase.Columns("illness9")
            Me.columnillness10 = MyBase.Columns("illness10")
            Me.columnillness11 = MyBase.Columns("illness11")
            Me.columnillness12 = MyBase.Columns("illness12")
            Me.columnillness13 = MyBase.Columns("illness13")
            Me.columnillness14 = MyBase.Columns("illness14")
            Me.columnillness15 = MyBase.Columns("illness15")
            Me.columnillness16 = MyBase.Columns("illness16")
            Me.columnillness17 = MyBase.Columns("illness17")
            Me.columnillness18 = MyBase.Columns("illness18")
            Me.columnillness19 = MyBase.Columns("illness19")
            Me.columnillness20 = MyBase.Columns("illness20")
            Me.columnhcpid = MyBase.Columns("hcpid")
            Me.columnhcpname = MyBase.Columns("hcpname")
            Me.columnhcpaddress = MyBase.Columns("hcpaddress")
            Me.columnhcplga = MyBase.Columns("hcplga")
            Me.columnsectortype = MyBase.Columns("sectortype")
            Me.columnhplan = MyBase.Columns("hplan")
            Me.columnpnetwork = MyBase.Columns("pnetwork")
            Me.columnugplan = MyBase.Columns("ugplan")
            Me.columnugmfees = MyBase.Columns("ugmfees")
            Me.columnugyfees = MyBase.Columns("ugyfees")
            Me.columnugstodate = MyBase.Columns("ugstodate")
            Me.columnugbalance = MyBase.Columns("ugbalance")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnenrolleeid = New Global.System.Data.DataColumn("enrolleeid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnenrolleeid)
            Me.columnSurname = New Global.System.Data.DataColumn("Surname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurname)
            Me.columnFirstname = New Global.System.Data.DataColumn("Firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstname)
            Me.columnothernames = New Global.System.Data.DataColumn("othernames", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnothernames)
            Me.columnsex = New Global.System.Data.DataColumn("sex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsex)
            Me.columnMaritalstatus = New Global.System.Data.DataColumn("Maritalstatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaritalstatus)
            Me.columntitle = New Global.System.Data.DataColumn("title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle)
            Me.columnhaddress = New Global.System.Data.DataColumn("haddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhaddress)
            Me.columnage = New Global.System.Data.DataColumn("age", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnage)
            Me.columndofb = New Global.System.Data.DataColumn("dofb", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndofb)
            Me.columntel = New Global.System.Data.DataColumn("tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntel)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columndregister = New Global.System.Data.DataColumn("dregister", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndregister)
            Me.columnsdate = New Global.System.Data.DataColumn("sdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsdate)
            Me.columnedate = New Global.System.Data.DataColumn("edate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnedate)
            Me.columnactive = New Global.System.Data.DataColumn("active", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactive)
            Me.columnnationalid = New Global.System.Data.DataColumn("nationalid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnationalid)
            Me.columnNHIS = New Global.System.Data.DataColumn("NHIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNHIS)
            Me.columnogaid = New Global.System.Data.DataColumn("ogaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogaid)
            Me.columnogaloc = New Global.System.Data.DataColumn("ogaloc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogaloc)
            Me.columnppicture = New Global.System.Data.DataColumn("ppicture", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnppicture)
            Me.columnspicture = New Global.System.Data.DataColumn("spicture", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspicture)
            Me.columnchildpix1 = New Global.System.Data.DataColumn("childpix1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchildpix1)
            Me.columnchildpix2 = New Global.System.Data.DataColumn("childpix2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchildpix2)
            Me.columnchildpix3 = New Global.System.Data.DataColumn("childpix3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchildpix3)
            Me.columnchildpix4 = New Global.System.Data.DataColumn("childpix4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchildpix4)
            Me.columnotherillness = New Global.System.Data.DataColumn("otherillness", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnotherillness)
            Me.columnillness1 = New Global.System.Data.DataColumn("illness1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness1)
            Me.columnillness2 = New Global.System.Data.DataColumn("illness2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness2)
            Me.columnillness3 = New Global.System.Data.DataColumn("illness3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness3)
            Me.columnillness4 = New Global.System.Data.DataColumn("illness4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness4)
            Me.columnillness5 = New Global.System.Data.DataColumn("illness5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness5)
            Me.columnillness6 = New Global.System.Data.DataColumn("illness6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness6)
            Me.columnillness7 = New Global.System.Data.DataColumn("illness7", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness7)
            Me.columnillness8 = New Global.System.Data.DataColumn("illness8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness8)
            Me.columnillness9 = New Global.System.Data.DataColumn("illness9", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness9)
            Me.columnillness10 = New Global.System.Data.DataColumn("illness10", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness10)
            Me.columnillness11 = New Global.System.Data.DataColumn("illness11", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness11)
            Me.columnillness12 = New Global.System.Data.DataColumn("illness12", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness12)
            Me.columnillness13 = New Global.System.Data.DataColumn("illness13", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness13)
            Me.columnillness14 = New Global.System.Data.DataColumn("illness14", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness14)
            Me.columnillness15 = New Global.System.Data.DataColumn("illness15", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness15)
            Me.columnillness16 = New Global.System.Data.DataColumn("illness16", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness16)
            Me.columnillness17 = New Global.System.Data.DataColumn("illness17", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness17)
            Me.columnillness18 = New Global.System.Data.DataColumn("illness18", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness18)
            Me.columnillness19 = New Global.System.Data.DataColumn("illness19", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness19)
            Me.columnillness20 = New Global.System.Data.DataColumn("illness20", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnillness20)
            Me.columnhcpid = New Global.System.Data.DataColumn("hcpid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhcpid)
            Me.columnhcpname = New Global.System.Data.DataColumn("hcpname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhcpname)
            Me.columnhcpaddress = New Global.System.Data.DataColumn("hcpaddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhcpaddress)
            Me.columnhcplga = New Global.System.Data.DataColumn("hcplga", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhcplga)
            Me.columnsectortype = New Global.System.Data.DataColumn("sectortype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsectortype)
            Me.columnhplan = New Global.System.Data.DataColumn("hplan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhplan)
            Me.columnpnetwork = New Global.System.Data.DataColumn("pnetwork", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpnetwork)
            Me.columnugplan = New Global.System.Data.DataColumn("ugplan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnugplan)
            Me.columnugmfees = New Global.System.Data.DataColumn("ugmfees", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnugmfees)
            Me.columnugyfees = New Global.System.Data.DataColumn("ugyfees", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnugyfees)
            Me.columnugstodate = New Global.System.Data.DataColumn("ugstodate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnugstodate)
            Me.columnugbalance = New Global.System.Data.DataColumn("ugbalance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnugbalance)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnenrolleeid}, True))
            Me.columnenrolleeid.AllowDBNull = False
            Me.columnenrolleeid.Unique = True
            Me.columnenrolleeid.MaxLength = 15
            Me.columnSurname.MaxLength = 30
            Me.columnFirstname.MaxLength = 30
            Me.columnothernames.MaxLength = 40
            Me.columnsex.MaxLength = 10
            Me.columnMaritalstatus.MaxLength = 10
            Me.columntitle.MaxLength = 10
            Me.columnhaddress.MaxLength = 200
            Me.columnage.MaxLength = 4
            Me.columntel.MaxLength = 100
            Me.columnemail.MaxLength = 100
            Me.columnnationalid.MaxLength = 100
            Me.columnNHIS.MaxLength = 100
            Me.columnogaid.MaxLength = 15
            Me.columnogaloc.MaxLength = 150
            Me.columnppicture.MaxLength = 180
            Me.columnspicture.MaxLength = 180
            Me.columnchildpix1.MaxLength = 180
            Me.columnchildpix2.MaxLength = 180
            Me.columnchildpix3.MaxLength = 180
            Me.columnchildpix4.MaxLength = 180
            Me.columnotherillness.MaxLength = 180
            Me.columnhcpid.MaxLength = 15
            Me.columnhcpname.MaxLength = 150
            Me.columnhcpaddress.MaxLength = 185
            Me.columnhcplga.MaxLength = 15
            Me.columnsectortype.MaxLength = 15
            Me.columnhplan.MaxLength = 15
            Me.columnpnetwork.MaxLength = 15
            Me.columnugplan.MaxLength = 15
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewenrolleetabRow() As enrolleetabRow
            Return CType(Me.NewRow, enrolleetabRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New enrolleetabRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(enrolleetabRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.enrolleetabRowChangedEvent) Is Nothing) Then
                RaiseEvent enrolleetabRowChanged(Me, New enrolleetabRowChangeEvent(CType(e.Row, enrolleetabRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.enrolleetabRowChangingEvent) Is Nothing) Then
                RaiseEvent enrolleetabRowChanging(Me, New enrolleetabRowChangeEvent(CType(e.Row, enrolleetabRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.enrolleetabRowDeletedEvent) Is Nothing) Then
                RaiseEvent enrolleetabRowDeleted(Me, New enrolleetabRowChangeEvent(CType(e.Row, enrolleetabRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.enrolleetabRowDeletingEvent) Is Nothing) Then
                RaiseEvent enrolleetabRowDeleting(Me, New enrolleetabRowChangeEvent(CType(e.Row, enrolleetabRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveenrolleetabRow(ByVal row As enrolleetabRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Enrolleeallset = New Enrolleeallset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "enrolleetabDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class enrolleetabRow
        Inherits Global.System.Data.DataRow

        Private tableenrolleetab As enrolleetabDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableenrolleetab = CType(Me.Table, enrolleetabDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property enrolleeid() As String
            Get
                Return CType(Me(Me.tableenrolleetab.enrolleeidColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.enrolleeidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Surname() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.SurnameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Surname' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.SurnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Firstname() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.FirstnameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Firstname' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.FirstnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property othernames() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.othernamesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'othernames' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.othernamesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property sex() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.sexColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sex' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.sexColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Maritalstatus() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.MaritalstatusColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maritalstatus' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.MaritalstatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property title() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.titleColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'title' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.titleColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property haddress() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.haddressColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'haddress' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.haddressColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property age() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ageColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'age' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.ageColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property dofb() As Date
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.dofbColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dofb' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableenrolleetab.dofbColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property tel() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.telColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tel' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.telColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property email() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.emailColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.emailColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property dregister() As Date
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.dregisterColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dregister' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableenrolleetab.dregisterColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property sdate() As Date
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.sdateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sdate' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableenrolleetab.sdateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property edate() As Date
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.edateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'edate' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableenrolleetab.edateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property active() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.activeColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'active' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.activeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property nationalid() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.nationalidColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nationalid' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.nationalidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NHIS() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.NHISColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NHIS' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.NHISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ogaid() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ogaidColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogaid' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.ogaidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ogaloc() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ogalocColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogaloc' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.ogalocColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ppicture() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ppictureColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ppicture' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.ppictureColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property spicture() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.spictureColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spicture' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.spictureColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property childpix1() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.childpix1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'childpix1' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.childpix1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property childpix2() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.childpix2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'childpix2' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.childpix2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property childpix3() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.childpix3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'childpix3' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.childpix3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property childpix4() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.childpix4Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'childpix4' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.childpix4Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property otherillness() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.otherillnessColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'otherillness' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.otherillnessColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness1() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness1Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness1' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness2() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness2Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness2' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness3() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness3Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness3' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness4() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness4Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness4' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness4Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness5() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness5Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness5' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness5Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness6() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness6Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness6' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness6Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness7() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness7Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness7' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness7Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness8() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness8Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness8' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness8Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness9() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness9Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness9' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness9Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness10() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness10Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness10' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness10Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness11() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness11Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness11' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness11Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness12() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness12Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness12' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness12Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness13() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness13Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness13' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness13Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness14() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness14Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness14' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness14Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness15() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness15Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness15' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness15Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness16() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness16Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness16' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness16Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness17() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness17Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness17' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness17Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness18() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness18Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness18' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness18Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness19() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness19Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness19' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness19Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property illness20() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.illness20Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'illness20' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableenrolleetab.illness20Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property hcpid() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.hcpidColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hcpid' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.hcpidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property hcpname() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.hcpnameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hcpname' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.hcpnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property hcpaddress() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.hcpaddressColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hcpaddress' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.hcpaddressColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property hcplga() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.hcplgaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hcplga' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.hcplgaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property sectortype() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.sectortypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sectortype' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.sectortypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property hplan() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.hplanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hplan' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.hplanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property pnetwork() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.pnetworkColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pnetwork' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.pnetworkColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ugplan() As String
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ugplanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ugplan' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableenrolleetab.ugplanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ugmfees() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ugmfeesColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ugmfees' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableenrolleetab.ugmfeesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ugyfees() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ugyfeesColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ugyfees' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableenrolleetab.ugyfeesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ugstodate() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ugstodateColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ugstodate' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableenrolleetab.ugstodateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ugbalance() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableenrolleetab.ugbalanceColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ugbalance' in table 'enrolleetab' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableenrolleetab.ugbalanceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSurnameNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.SurnameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSurnameNull()
            Me(Me.tableenrolleetab.SurnameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFirstnameNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.FirstnameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFirstnameNull()
            Me(Me.tableenrolleetab.FirstnameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsothernamesNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.othernamesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetothernamesNull()
            Me(Me.tableenrolleetab.othernamesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IssexNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.sexColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetsexNull()
            Me(Me.tableenrolleetab.sexColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMaritalstatusNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.MaritalstatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMaritalstatusNull()
            Me(Me.tableenrolleetab.MaritalstatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IstitleNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.titleColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SettitleNull()
            Me(Me.tableenrolleetab.titleColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IshaddressNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.haddressColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SethaddressNull()
            Me(Me.tableenrolleetab.haddressColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsageNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ageColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetageNull()
            Me(Me.tableenrolleetab.ageColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsdofbNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.dofbColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetdofbNull()
            Me(Me.tableenrolleetab.dofbColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IstelNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.telColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SettelNull()
            Me(Me.tableenrolleetab.telColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.emailColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetemailNull()
            Me(Me.tableenrolleetab.emailColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsdregisterNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.dregisterColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetdregisterNull()
            Me(Me.tableenrolleetab.dregisterColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IssdateNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.sdateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetsdateNull()
            Me(Me.tableenrolleetab.sdateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsedateNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.edateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetedateNull()
            Me(Me.tableenrolleetab.edateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsactiveNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.activeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetactiveNull()
            Me(Me.tableenrolleetab.activeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsnationalidNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.nationalidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetnationalidNull()
            Me(Me.tableenrolleetab.nationalidColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNHISNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.NHISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNHISNull()
            Me(Me.tableenrolleetab.NHISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsogaidNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ogaidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetogaidNull()
            Me(Me.tableenrolleetab.ogaidColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsogalocNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ogalocColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetogalocNull()
            Me(Me.tableenrolleetab.ogalocColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsppictureNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ppictureColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetppictureNull()
            Me(Me.tableenrolleetab.ppictureColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsspictureNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.spictureColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetspictureNull()
            Me(Me.tableenrolleetab.spictureColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ischildpix1Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.childpix1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setchildpix1Null()
            Me(Me.tableenrolleetab.childpix1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ischildpix2Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.childpix2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setchildpix2Null()
            Me(Me.tableenrolleetab.childpix2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ischildpix3Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.childpix3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setchildpix3Null()
            Me(Me.tableenrolleetab.childpix3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ischildpix4Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.childpix4Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setchildpix4Null()
            Me(Me.tableenrolleetab.childpix4Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsotherillnessNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.otherillnessColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetotherillnessNull()
            Me(Me.tableenrolleetab.otherillnessColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness1Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness1Null()
            Me(Me.tableenrolleetab.illness1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness2Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness2Null()
            Me(Me.tableenrolleetab.illness2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness3Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness3Null()
            Me(Me.tableenrolleetab.illness3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness4Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness4Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness4Null()
            Me(Me.tableenrolleetab.illness4Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness5Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness5Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness5Null()
            Me(Me.tableenrolleetab.illness5Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness6Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness6Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness6Null()
            Me(Me.tableenrolleetab.illness6Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness7Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness7Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness7Null()
            Me(Me.tableenrolleetab.illness7Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness8Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness8Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness8Null()
            Me(Me.tableenrolleetab.illness8Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness9Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness9Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness9Null()
            Me(Me.tableenrolleetab.illness9Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness10Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness10Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness10Null()
            Me(Me.tableenrolleetab.illness10Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness11Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness11Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness11Null()
            Me(Me.tableenrolleetab.illness11Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness12Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness12Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness12Null()
            Me(Me.tableenrolleetab.illness12Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness13Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness13Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness13Null()
            Me(Me.tableenrolleetab.illness13Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness14Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness14Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness14Null()
            Me(Me.tableenrolleetab.illness14Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness15Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness15Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness15Null()
            Me(Me.tableenrolleetab.illness15Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness16Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness16Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness16Null()
            Me(Me.tableenrolleetab.illness16Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness17Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness17Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness17Null()
            Me(Me.tableenrolleetab.illness17Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness18Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness18Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness18Null()
            Me(Me.tableenrolleetab.illness18Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness19Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness19Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness19Null()
            Me(Me.tableenrolleetab.illness19Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isillness20Null() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.illness20Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setillness20Null()
            Me(Me.tableenrolleetab.illness20Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IshcpidNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.hcpidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SethcpidNull()
            Me(Me.tableenrolleetab.hcpidColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IshcpnameNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.hcpnameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SethcpnameNull()
            Me(Me.tableenrolleetab.hcpnameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IshcpaddressNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.hcpaddressColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SethcpaddressNull()
            Me(Me.tableenrolleetab.hcpaddressColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IshcplgaNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.hcplgaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SethcplgaNull()
            Me(Me.tableenrolleetab.hcplgaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IssectortypeNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.sectortypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetsectortypeNull()
            Me(Me.tableenrolleetab.sectortypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IshplanNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.hplanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SethplanNull()
            Me(Me.tableenrolleetab.hplanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IspnetworkNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.pnetworkColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetpnetworkNull()
            Me(Me.tableenrolleetab.pnetworkColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsugplanNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ugplanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetugplanNull()
            Me(Me.tableenrolleetab.ugplanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsugmfeesNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ugmfeesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetugmfeesNull()
            Me(Me.tableenrolleetab.ugmfeesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsugyfeesNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ugyfeesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetugyfeesNull()
            Me(Me.tableenrolleetab.ugyfeesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsugstodateNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ugstodateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetugstodateNull()
            Me(Me.tableenrolleetab.ugstodateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsugbalanceNull() As Boolean
            Return Me.IsNull(Me.tableenrolleetab.ugbalanceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetugbalanceNull()
            Me(Me.tableenrolleetab.ugbalanceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class enrolleetabRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As enrolleetabRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As enrolleetabRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As enrolleetabRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace EnrolleeallsetTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class enrolleetabTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "enrolleetab"
            tableMapping.ColumnMappings.Add("enrolleeid", "enrolleeid")
            tableMapping.ColumnMappings.Add("Surname", "Surname")
            tableMapping.ColumnMappings.Add("Firstname", "Firstname")
            tableMapping.ColumnMappings.Add("othernames", "othernames")
            tableMapping.ColumnMappings.Add("sex", "sex")
            tableMapping.ColumnMappings.Add("Maritalstatus", "Maritalstatus")
            tableMapping.ColumnMappings.Add("title", "title")
            tableMapping.ColumnMappings.Add("haddress", "haddress")
            tableMapping.ColumnMappings.Add("age", "age")
            tableMapping.ColumnMappings.Add("dofb", "dofb")
            tableMapping.ColumnMappings.Add("tel", "tel")
            tableMapping.ColumnMappings.Add("email", "email")
            tableMapping.ColumnMappings.Add("dregister", "dregister")
            tableMapping.ColumnMappings.Add("sdate", "sdate")
            tableMapping.ColumnMappings.Add("edate", "edate")
            tableMapping.ColumnMappings.Add("active", "active")
            tableMapping.ColumnMappings.Add("nationalid", "nationalid")
            tableMapping.ColumnMappings.Add("NHIS", "NHIS")
            tableMapping.ColumnMappings.Add("ogaid", "ogaid")
            tableMapping.ColumnMappings.Add("ogaloc", "ogaloc")
            tableMapping.ColumnMappings.Add("ppicture", "ppicture")
            tableMapping.ColumnMappings.Add("spicture", "spicture")
            tableMapping.ColumnMappings.Add("childpix1", "childpix1")
            tableMapping.ColumnMappings.Add("childpix2", "childpix2")
            tableMapping.ColumnMappings.Add("childpix3", "childpix3")
            tableMapping.ColumnMappings.Add("childpix4", "childpix4")
            tableMapping.ColumnMappings.Add("otherillness", "otherillness")
            tableMapping.ColumnMappings.Add("illness1", "illness1")
            tableMapping.ColumnMappings.Add("illness2", "illness2")
            tableMapping.ColumnMappings.Add("illness3", "illness3")
            tableMapping.ColumnMappings.Add("illness4", "illness4")
            tableMapping.ColumnMappings.Add("illness5", "illness5")
            tableMapping.ColumnMappings.Add("illness6", "illness6")
            tableMapping.ColumnMappings.Add("illness7", "illness7")
            tableMapping.ColumnMappings.Add("illness8", "illness8")
            tableMapping.ColumnMappings.Add("illness9", "illness9")
            tableMapping.ColumnMappings.Add("illness10", "illness10")
            tableMapping.ColumnMappings.Add("illness11", "illness11")
            tableMapping.ColumnMappings.Add("illness12", "illness12")
            tableMapping.ColumnMappings.Add("illness13", "illness13")
            tableMapping.ColumnMappings.Add("illness14", "illness14")
            tableMapping.ColumnMappings.Add("illness15", "illness15")
            tableMapping.ColumnMappings.Add("illness16", "illness16")
            tableMapping.ColumnMappings.Add("illness17", "illness17")
            tableMapping.ColumnMappings.Add("illness18", "illness18")
            tableMapping.ColumnMappings.Add("illness19", "illness19")
            tableMapping.ColumnMappings.Add("illness20", "illness20")
            tableMapping.ColumnMappings.Add("hcpid", "hcpid")
            tableMapping.ColumnMappings.Add("hcpname", "hcpname")
            tableMapping.ColumnMappings.Add("hcpaddress", "hcpaddress")
            tableMapping.ColumnMappings.Add("hcplga", "hcplga")
            tableMapping.ColumnMappings.Add("sectortype", "sectortype")
            tableMapping.ColumnMappings.Add("hplan", "hplan")
            tableMapping.ColumnMappings.Add("pnetwork", "pnetwork")
            tableMapping.ColumnMappings.Add("ugplan", "ugplan")
            tableMapping.ColumnMappings.Add("ugmfees", "ugmfees")
            tableMapping.ColumnMappings.Add("ugyfees", "ugyfees")
            tableMapping.ColumnMappings.Add("ugstodate", "ugstodate")
            tableMapping.ColumnMappings.Add("ugbalance", "ugbalance")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""dsnlHMODB"".""dbo"".""enrolleetab"" WHERE ((""enrolleeid"" = ?) AND ((? = 1" & _
                " AND ""Surname"" IS NULL) OR (""Surname"" = ?)) AND ((? = 1 AND ""Firstname"" IS NULL)" & _
                " OR (""Firstname"" = ?)) AND ((? = 1 AND ""othernames"" IS NULL) OR (""othernames"" = " & _
                "?)) AND ((? = 1 AND ""sex"" IS NULL) OR (""sex"" = ?)) AND ((? = 1 AND ""Maritalstatu" & _
                "s"" IS NULL) OR (""Maritalstatus"" = ?)) AND ((? = 1 AND ""title"" IS NULL) OR (""titl" & _
                "e"" = ?)) AND ((? = 1 AND ""haddress"" IS NULL) OR (""haddress"" = ?)) AND ((? = 1 AN" & _
                "D ""age"" IS NULL) OR (""age"" = ?)) AND ((? = 1 AND ""dofb"" IS NULL) OR (""dofb"" = ?)" & _
                ") AND ((? = 1 AND ""tel"" IS NULL) OR (""tel"" = ?)) AND ((? = 1 AND ""email"" IS NULL" & _
                ") OR (""email"" = ?)) AND ((? = 1 AND ""dregister"" IS NULL) OR (""dregister"" = ?)) A" & _
                "ND ((? = 1 AND ""sdate"" IS NULL) OR (""sdate"" = ?)) AND ((? = 1 AND ""edate"" IS NUL" & _
                "L) OR (""edate"" = ?)) AND ((? = 1 AND ""active"" IS NULL) OR (""active"" = ?)) AND ((" & _
                "? = 1 AND ""nationalid"" IS NULL) OR (""nationalid"" = ?)) AND ((? = 1 AND ""NHIS"" IS" & _
                " NULL) OR (""NHIS"" = ?)) AND ((? = 1 AND ""ogaid"" IS NULL) OR (""ogaid"" = ?)) AND (" & _
                "(? = 1 AND ""ogaloc"" IS NULL) OR (""ogaloc"" = ?)) AND ((? = 1 AND ""ppicture"" IS NU" & _
                "LL) OR (""ppicture"" = ?)) AND ((? = 1 AND ""spicture"" IS NULL) OR (""spicture"" = ?)" & _
                ") AND ((? = 1 AND ""childpix1"" IS NULL) OR (""childpix1"" = ?)) AND ((? = 1 AND ""ch" & _
                "ildpix2"" IS NULL) OR (""childpix2"" = ?)) AND ((? = 1 AND ""childpix3"" IS NULL) OR " & _
                "(""childpix3"" = ?)) AND ((? = 1 AND ""childpix4"" IS NULL) OR (""childpix4"" = ?)) AN" & _
                "D ((? = 1 AND ""otherillness"" IS NULL) OR (""otherillness"" = ?)) AND ((? = 1 AND """ & _
                "illness1"" IS NULL) OR (""illness1"" = ?)) AND ((? = 1 AND ""illness2"" IS NULL) OR (" & _
                """illness2"" = ?)) AND ((? = 1 AND ""illness3"" IS NULL) OR (""illness3"" = ?)) AND ((" & _
                "? = 1 AND ""illness4"" IS NULL) OR (""illness4"" = ?)) AND ((? = 1 AND ""illness5"" IS" & _
                " NULL) OR (""illness5"" = ?)) AND ((? = 1 AND ""illness6"" IS NULL) OR (""illness6"" =" & _
                " ?)) AND ((? = 1 AND ""illness7"" IS NULL) OR (""illness7"" = ?)) AND ((? = 1 AND ""i" & _
                "llness8"" IS NULL) OR (""illness8"" = ?)) AND ((? = 1 AND ""illness9"" IS NULL) OR (""" & _
                "illness9"" = ?)) AND ((? = 1 AND ""illness10"" IS NULL) OR (""illness10"" = ?)) AND (" & _
                "(? = 1 AND ""illness11"" IS NULL) OR (""illness11"" = ?)) AND ((? = 1 AND ""illness12" & _
                """ IS NULL) OR (""illness12"" = ?)) AND ((? = 1 AND ""illness13"" IS NULL) OR (""illne" & _
                "ss13"" = ?)) AND ((? = 1 AND ""illness14"" IS NULL) OR (""illness14"" = ?)) AND ((? =" & _
                " 1 AND ""illness15"" IS NULL) OR (""illness15"" = ?)) AND ((? = 1 AND ""illness16"" IS" & _
                " NULL) OR (""illness16"" = ?)) AND ((? = 1 AND ""illness17"" IS NULL) OR (""illness17" & _
                """ = ?)) AND ((? = 1 AND ""illness18"" IS NULL) OR (""illness18"" = ?)) AND ((? = 1 A" & _
                "ND ""illness19"" IS NULL) OR (""illness19"" = ?)) AND ((? = 1 AND ""illness20"" IS NUL" & _
                "L) OR (""illness20"" = ?)) AND ((? = 1 AND ""hcpid"" IS NULL) OR (""hcpid"" = ?)) AND " & _
                "((? = 1 AND ""hcpname"" IS NULL) OR (""hcpname"" = ?)) AND ((? = 1 AND ""hcpaddress"" " & _
                "IS NULL) OR (""hcpaddress"" = ?)) AND ((? = 1 AND ""hcplga"" IS NULL) OR (""hcplga"" =" & _
                " ?)) AND ((? = 1 AND ""sectortype"" IS NULL) OR (""sectortype"" = ?)) AND ((? = 1 AN" & _
                "D ""hplan"" IS NULL) OR (""hplan"" = ?)) AND ((? = 1 AND ""pnetwork"" IS NULL) OR (""pn" & _
                "etwork"" = ?)) AND ((? = 1 AND ""ugplan"" IS NULL) OR (""ugplan"" = ?)) AND ((? = 1 A" & _
                "ND ""ugmfees"" IS NULL) OR (""ugmfees"" = ?)) AND ((? = 1 AND ""ugyfees"" IS NULL) OR " & _
                "(""ugyfees"" = ?)) AND ((? = 1 AND ""ugstodate"" IS NULL) OR (""ugstodate"" = ?)) AND " & _
                "((? = 1 AND ""ugbalance"" IS NULL) OR (""ugbalance"" = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_enrolleeid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "enrolleeid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Surname", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Surname", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Surname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Surname", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Firstname", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Firstname", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Firstname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Firstname", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_othernames", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "othernames", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_othernames", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "othernames", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_sex", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sex", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_sex", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sex", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Maritalstatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Maritalstatus", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Maritalstatus", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Maritalstatus", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_title", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "title", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_title", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "title", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_haddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "haddress", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_haddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "haddress", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_age", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "age", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_age", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "age", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dofb", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dofb", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dofb", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dofb", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_tel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tel", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_tel", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tel", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_email", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "email", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_email", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "email", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dregister", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dregister", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dregister", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dregister", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_sdate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sdate", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_sdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sdate", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_edate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "edate", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_edate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "edate", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_active", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "active", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_active", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "active", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nationalid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "nationalid", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nationalid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "nationalid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NHIS", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "NHIS", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NHIS", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "NHIS", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ogaid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaid", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ogaid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ogaloc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaloc", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ogaloc", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaloc", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ppicture", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ppicture", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ppicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ppicture", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_spicture", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spicture", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_spicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spicture", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix1", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix1", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix1", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix2", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix2", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix2", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix3", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix3", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix3", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix4", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix4", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix4", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_otherillness", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "otherillness", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_otherillness", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "otherillness", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness1", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness1", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness1", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness2", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness2", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness2", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness3", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness3", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness3", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness4", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness4", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness4", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness5", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness5", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness5", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness5", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness6", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness6", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness6", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness6", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness7", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness7", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness7", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness7", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness8", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness8", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness8", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness8", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness9", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness9", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness9", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness9", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness10", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness10", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness10", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness10", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness11", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness11", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness11", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness11", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness12", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness12", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness12", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness12", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness13", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness13", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness13", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness13", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness14", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness14", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness14", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness14", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness15", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness15", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness15", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness15", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness16", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness16", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness16", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness16", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness17", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness17", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness17", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness17", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness18", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness18", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness18", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness18", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness19", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness19", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness19", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness19", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness20", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness20", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness20", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness20", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcpid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpid", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcpid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcpname", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpname", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcpname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpname", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcpaddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpaddress", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcpaddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpaddress", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcplga", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcplga", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcplga", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcplga", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_sectortype", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sectortype", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_sectortype", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sectortype", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hplan", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hplan", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hplan", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_pnetwork", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "pnetwork", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pnetwork", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "pnetwork", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugplan", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugplan", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugplan", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugmfees", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugmfees", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugmfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugmfees", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugyfees", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugyfees", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugyfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugyfees", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugstodate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugstodate", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugstodate", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugstodate", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugbalance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugbalance", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugbalance", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugbalance", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""dsnlHMODB"".""dbo"".""enrolleetab"" (""enrolleeid"", ""Surname"", ""Firstname""" & _
                ", ""othernames"", ""sex"", ""Maritalstatus"", ""title"", ""haddress"", ""age"", ""dofb"", ""tel" & _
                """, ""email"", ""dregister"", ""sdate"", ""edate"", ""active"", ""nationalid"", ""NHIS"", ""ogai" & _
                "d"", ""ogaloc"", ""ppicture"", ""spicture"", ""childpix1"", ""childpix2"", ""childpix3"", ""ch" & _
                "ildpix4"", ""otherillness"", ""illness1"", ""illness2"", ""illness3"", ""illness4"", ""illne" & _
                "ss5"", ""illness6"", ""illness7"", ""illness8"", ""illness9"", ""illness10"", ""illness11"", " & _
                """illness12"", ""illness13"", ""illness14"", ""illness15"", ""illness16"", ""illness17"", ""i" & _
                "llness18"", ""illness19"", ""illness20"", ""hcpid"", ""hcpname"", ""hcpaddress"", ""hcplga""," & _
                " ""sectortype"", ""hplan"", ""pnetwork"", ""ugplan"", ""ugmfees"", ""ugyfees"", ""ugstodate""," & _
                " ""ugbalance"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("enrolleeid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "enrolleeid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Surname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Surname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Firstname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Firstname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("othernames", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "othernames", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sex", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sex", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Maritalstatus", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Maritalstatus", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("title", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "title", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("haddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "haddress", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("age", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "age", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dofb", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dofb", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("tel", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tel", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("email", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "email", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dregister", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dregister", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sdate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("edate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "edate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("active", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "active", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nationalid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "nationalid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NHIS", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "NHIS", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ogaid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ogaloc", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaloc", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ppicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ppicture", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spicture", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix1", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix2", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix3", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix4", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("otherillness", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "otherillness", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness1", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness2", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness3", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness4", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness5", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness6", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness7", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness8", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness9", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness10", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness11", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness12", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness13", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness14", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness15", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness16", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness17", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness17", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness18", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness18", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness19", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness19", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness20", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness20", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcpid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcpname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcpaddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpaddress", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcplga", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcplga", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sectortype", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sectortype", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hplan", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pnetwork", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "pnetwork", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugplan", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugmfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugmfees", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugyfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugyfees", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugstodate", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugstodate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugbalance", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugbalance", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""dsnlHMODB"".""dbo"".""enrolleetab"" SET ""enrolleeid"" = ?, ""Surname"" = ?, ""Firs" & _
                "tname"" = ?, ""othernames"" = ?, ""sex"" = ?, ""Maritalstatus"" = ?, ""title"" = ?, ""hadd" & _
                "ress"" = ?, ""age"" = ?, ""dofb"" = ?, ""tel"" = ?, ""email"" = ?, ""dregister"" = ?, ""sdat" & _
                "e"" = ?, ""edate"" = ?, ""active"" = ?, ""nationalid"" = ?, ""NHIS"" = ?, ""ogaid"" = ?, ""o" & _
                "galoc"" = ?, ""ppicture"" = ?, ""spicture"" = ?, ""childpix1"" = ?, ""childpix2"" = ?, ""c" & _
                "hildpix3"" = ?, ""childpix4"" = ?, ""otherillness"" = ?, ""illness1"" = ?, ""illness2"" =" & _
                " ?, ""illness3"" = ?, ""illness4"" = ?, ""illness5"" = ?, ""illness6"" = ?, ""illness7"" =" & _
                " ?, ""illness8"" = ?, ""illness9"" = ?, ""illness10"" = ?, ""illness11"" = ?, ""illness12" & _
                """ = ?, ""illness13"" = ?, ""illness14"" = ?, ""illness15"" = ?, ""illness16"" = ?, ""illn" & _
                "ess17"" = ?, ""illness18"" = ?, ""illness19"" = ?, ""illness20"" = ?, ""hcpid"" = ?, ""hcp" & _
                "name"" = ?, ""hcpaddress"" = ?, ""hcplga"" = ?, ""sectortype"" = ?, ""hplan"" = ?, ""pnetw" & _
                "ork"" = ?, ""ugplan"" = ?, ""ugmfees"" = ?, ""ugyfees"" = ?, ""ugstodate"" = ?, ""ugbalanc" & _
                "e"" = ? WHERE ((""enrolleeid"" = ?) AND ((? = 1 AND ""Surname"" IS NULL) OR (""Surname" & _
                """ = ?)) AND ((? = 1 AND ""Firstname"" IS NULL) OR (""Firstname"" = ?)) AND ((? = 1 A" & _
                "ND ""othernames"" IS NULL) OR (""othernames"" = ?)) AND ((? = 1 AND ""sex"" IS NULL) O" & _
                "R (""sex"" = ?)) AND ((? = 1 AND ""Maritalstatus"" IS NULL) OR (""Maritalstatus"" = ?)" & _
                ") AND ((? = 1 AND ""title"" IS NULL) OR (""title"" = ?)) AND ((? = 1 AND ""haddress"" " & _
                "IS NULL) OR (""haddress"" = ?)) AND ((? = 1 AND ""age"" IS NULL) OR (""age"" = ?)) AND" & _
                " ((? = 1 AND ""dofb"" IS NULL) OR (""dofb"" = ?)) AND ((? = 1 AND ""tel"" IS NULL) OR " & _
                "(""tel"" = ?)) AND ((? = 1 AND ""email"" IS NULL) OR (""email"" = ?)) AND ((? = 1 AND " & _
                """dregister"" IS NULL) OR (""dregister"" = ?)) AND ((? = 1 AND ""sdate"" IS NULL) OR (" & _
                """sdate"" = ?)) AND ((? = 1 AND ""edate"" IS NULL) OR (""edate"" = ?)) AND ((? = 1 AND" & _
                " ""active"" IS NULL) OR (""active"" = ?)) AND ((? = 1 AND ""nationalid"" IS NULL) OR (" & _
                """nationalid"" = ?)) AND ((? = 1 AND ""NHIS"" IS NULL) OR (""NHIS"" = ?)) AND ((? = 1 " & _
                "AND ""ogaid"" IS NULL) OR (""ogaid"" = ?)) AND ((? = 1 AND ""ogaloc"" IS NULL) OR (""og" & _
                "aloc"" = ?)) AND ((? = 1 AND ""ppicture"" IS NULL) OR (""ppicture"" = ?)) AND ((? = 1" & _
                " AND ""spicture"" IS NULL) OR (""spicture"" = ?)) AND ((? = 1 AND ""childpix1"" IS NUL" & _
                "L) OR (""childpix1"" = ?)) AND ((? = 1 AND ""childpix2"" IS NULL) OR (""childpix2"" = " & _
                "?)) AND ((? = 1 AND ""childpix3"" IS NULL) OR (""childpix3"" = ?)) AND ((? = 1 AND """ & _
                "childpix4"" IS NULL) OR (""childpix4"" = ?)) AND ((? = 1 AND ""otherillness"" IS NULL" & _
                ") OR (""otherillness"" = ?)) AND ((? = 1 AND ""illness1"" IS NULL) OR (""illness1"" = " & _
                "?)) AND ((? = 1 AND ""illness2"" IS NULL) OR (""illness2"" = ?)) AND ((? = 1 AND ""il" & _
                "lness3"" IS NULL) OR (""illness3"" = ?)) AND ((? = 1 AND ""illness4"" IS NULL) OR (""i" & _
                "llness4"" = ?)) AND ((? = 1 AND ""illness5"" IS NULL) OR (""illness5"" = ?)) AND ((? " & _
                "= 1 AND ""illness6"" IS NULL) OR (""illness6"" = ?)) AND ((? = 1 AND ""illness7"" IS N" & _
                "ULL) OR (""illness7"" = ?)) AND ((? = 1 AND ""illness8"" IS NULL) OR (""illness8"" = ?" & _
                ")) AND ((? = 1 AND ""illness9"" IS NULL) OR (""illness9"" = ?)) AND ((? = 1 AND ""ill" & _
                "ness10"" IS NULL) OR (""illness10"" = ?)) AND ((? = 1 AND ""illness11"" IS NULL) OR (" & _
                """illness11"" = ?)) AND ((? = 1 AND ""illness12"" IS NULL) OR (""illness12"" = ?)) AND" & _
                " ((? = 1 AND ""illness13"" IS NULL) OR (""illness13"" = ?)) AND ((? = 1 AND ""illness" & _
                "14"" IS NULL) OR (""illness14"" = ?)) AND ((? = 1 AND ""illness15"" IS NULL) OR (""ill" & _
                "ness15"" = ?)) AND ((? = 1 AND ""illness16"" IS NULL) OR (""illness16"" = ?)) AND ((?" & _
                " = 1 AND ""illness17"" IS NULL) OR (""illness17"" = ?)) AND ((? = 1 AND ""illness18"" " & _
                "IS NULL) OR (""illness18"" = ?)) AND ((? = 1 AND ""illness19"" IS NULL) OR (""illness" & _
                "19"" = ?)) AND ((? = 1 AND ""illness20"" IS NULL) OR (""illness20"" = ?)) AND ((? = 1" & _
                " AND ""hcpid"" IS NULL) OR (""hcpid"" = ?)) AND ((? = 1 AND ""hcpname"" IS NULL) OR (""" & _
                "hcpname"" = ?)) AND ((? = 1 AND ""hcpaddress"" IS NULL) OR (""hcpaddress"" = ?)) AND " & _
                "((? = 1 AND ""hcplga"" IS NULL) OR (""hcplga"" = ?)) AND ((? = 1 AND ""sectortype"" IS" & _
                " NULL) OR (""sectortype"" = ?)) AND ((? = 1 AND ""hplan"" IS NULL) OR (""hplan"" = ?))" & _
                " AND ((? = 1 AND ""pnetwork"" IS NULL) OR (""pnetwork"" = ?)) AND ((? = 1 AND ""ugpla" & _
                "n"" IS NULL) OR (""ugplan"" = ?)) AND ((? = 1 AND ""ugmfees"" IS NULL) OR (""ugmfees"" " & _
                "= ?)) AND ((? = 1 AND ""ugyfees"" IS NULL) OR (""ugyfees"" = ?)) AND ((? = 1 AND ""ug" & _
                "stodate"" IS NULL) OR (""ugstodate"" = ?)) AND ((? = 1 AND ""ugbalance"" IS NULL) OR " & _
                "(""ugbalance"" = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("enrolleeid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "enrolleeid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Surname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Surname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Firstname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Firstname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("othernames", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "othernames", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sex", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sex", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Maritalstatus", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Maritalstatus", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("title", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "title", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("haddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "haddress", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("age", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "age", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dofb", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dofb", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("tel", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tel", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("email", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "email", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dregister", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dregister", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sdate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("edate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "edate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("active", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "active", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nationalid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "nationalid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NHIS", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "NHIS", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ogaid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ogaloc", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaloc", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ppicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ppicture", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spicture", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix1", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix2", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix3", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("childpix4", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("otherillness", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "otherillness", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness1", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness2", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness3", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness4", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness5", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness6", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness7", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness8", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness9", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness10", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness11", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness12", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness13", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness14", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness15", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness16", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness17", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness17", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness18", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness18", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness19", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness19", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("illness20", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness20", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcpid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcpname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcpaddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpaddress", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hcplga", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcplga", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sectortype", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sectortype", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hplan", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pnetwork", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "pnetwork", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugplan", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugmfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugmfees", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugyfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugyfees", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugstodate", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugstodate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ugbalance", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugbalance", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_enrolleeid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "enrolleeid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Surname", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Surname", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Surname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Surname", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Firstname", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Firstname", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Firstname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Firstname", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_othernames", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "othernames", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_othernames", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "othernames", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_sex", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sex", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_sex", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sex", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Maritalstatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Maritalstatus", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Maritalstatus", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Maritalstatus", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_title", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "title", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_title", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "title", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_haddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "haddress", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_haddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "haddress", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_age", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "age", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_age", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "age", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dofb", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dofb", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dofb", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dofb", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_tel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tel", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_tel", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tel", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_email", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "email", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_email", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "email", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dregister", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dregister", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dregister", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dregister", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_sdate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sdate", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_sdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sdate", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_edate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "edate", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_edate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "edate", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_active", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "active", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_active", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "active", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nationalid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "nationalid", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nationalid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "nationalid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NHIS", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "NHIS", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NHIS", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "NHIS", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ogaid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaid", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ogaid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ogaloc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaloc", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ogaloc", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ogaloc", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ppicture", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ppicture", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ppicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ppicture", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_spicture", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spicture", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_spicture", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spicture", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix1", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix1", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix1", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix2", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix2", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix2", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix3", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix3", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix3", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_childpix4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix4", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_childpix4", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "childpix4", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_otherillness", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "otherillness", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_otherillness", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "otherillness", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness1", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness1", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness1", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness2", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness2", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness2", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness3", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness3", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness3", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness4", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness4", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness4", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness5", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness5", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness5", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness5", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness6", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness6", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness6", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness6", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness7", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness7", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness7", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness7", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness8", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness8", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness8", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness8", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness9", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness9", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness9", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness9", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness10", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness10", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness10", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness10", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness11", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness11", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness11", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness11", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness12", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness12", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness12", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness12", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness13", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness13", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness13", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness13", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness14", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness14", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness14", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness14", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness15", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness15", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness15", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness15", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness16", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness16", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness16", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness16", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness17", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness17", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness17", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness17", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness18", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness18", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness18", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness18", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness19", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness19", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness19", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness19", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_illness20", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness20", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_illness20", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "illness20", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcpid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpid", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcpid", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpid", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcpname", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpname", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcpname", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpname", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcpaddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpaddress", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcpaddress", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcpaddress", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hcplga", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcplga", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hcplga", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hcplga", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_sectortype", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sectortype", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_sectortype", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sectortype", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_hplan", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hplan", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_hplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hplan", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_pnetwork", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "pnetwork", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pnetwork", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "pnetwork", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugplan", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugplan", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugplan", Global.System.Data.Odbc.OdbcType.[Char], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugplan", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugmfees", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugmfees", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugmfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugmfees", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugyfees", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugyfees", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugyfees", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugyfees", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugstodate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugstodate", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugstodate", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugstodate", Global.System.Data.DataRowVersion.Original, False, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ugbalance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "ugbalance", Global.System.Data.DataRowVersion.Original, True, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ugbalance", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(18, Byte), CType(2, Byte), "ugbalance", Global.System.Data.DataRowVersion.Original, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.dsnlHMOsystems.My.MySettings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""enrolleeid"", ""Surname"", ""Firstname"", ""othernames"", ""sex"", ""Maritalstatus""" & _
                ", ""title"", ""haddress"", ""age"", ""dofb"", ""tel"", ""email"", ""dregister"", ""sdate"", ""eda" & _
                "te"", ""active"", ""nationalid"", ""NHIS"", ""ogaid"", ""ogaloc"", ""ppicture"", ""spicture"", " & _
                """childpix1"", ""childpix2"", ""childpix3"", ""childpix4"", ""otherillness"", ""illness1"", " & _
                """illness2"", ""illness3"", ""illness4"", ""illness5"", ""illness6"", ""illness7"", ""illness" & _
                "8"", ""illness9"", ""illness10"", ""illness11"", ""illness12"", ""illness13"", ""illness14""," & _
                " ""illness15"", ""illness16"", ""illness17"", ""illness18"", ""illness19"", ""illness20"", """ & _
                "hcpid"", ""hcpname"", ""hcpaddress"", ""hcplga"", ""sectortype"", ""hplan"", ""pnetwork"", ""u" & _
                "gplan"", ""ugmfees"", ""ugyfees"", ""ugstodate"", ""ugbalance"" FROM ""dbo"".""enrolleetab"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As Enrolleeallset.enrolleetabDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As Enrolleeallset.enrolleetabDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Enrolleeallset.enrolleetabDataTable = New Enrolleeallset.enrolleetabDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As Enrolleeallset.enrolleetabDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As Enrolleeallset) As Integer
            Return Me.Adapter.Update(dataSet, "enrolleetab")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete( _
                    ByVal Original_enrolleeid As String, _
                    ByVal Original_Surname As String, _
                    ByVal Original_Firstname As String, _
                    ByVal Original_othernames As String, _
                    ByVal Original_sex As String, _
                    ByVal Original_Maritalstatus As String, _
                    ByVal Original_title As String, _
                    ByVal Original_haddress As String, _
                    ByVal Original_age As String, _
                    ByVal Original_dofb As Date, _
                    ByVal Original_tel As String, _
                    ByVal Original_email As String, _
                    ByVal Original_dregister As Date, _
                    ByVal Original_sdate As Date, _
                    ByVal Original_edate As Date, _
                    ByVal Original_active As Boolean, _
                    ByVal Original_nationalid As String, _
                    ByVal Original_NHIS As String, _
                    ByVal Original_ogaid As String, _
                    ByVal Original_ogaloc As String, _
                    ByVal Original_ppicture As String, _
                    ByVal Original_spicture As String, _
                    ByVal Original_childpix1 As String, _
                    ByVal Original_childpix2 As String, _
                    ByVal Original_childpix3 As String, _
                    ByVal Original_childpix4 As String, _
                    ByVal Original_otherillness As String, _
                    ByVal Original_illness1 As Boolean, _
                    ByVal Original_illness2 As Boolean, _
                    ByVal Original_illness3 As Boolean, _
                    ByVal Original_illness4 As Boolean, _
                    ByVal Original_illness5 As Boolean, _
                    ByVal Original_illness6 As Boolean, _
                    ByVal Original_illness7 As Boolean, _
                    ByVal Original_illness8 As Boolean, _
                    ByVal Original_illness9 As Boolean, _
                    ByVal Original_illness10 As Boolean, _
                    ByVal Original_illness11 As Boolean, _
                    ByVal Original_illness12 As Boolean, _
                    ByVal Original_illness13 As Boolean, _
                    ByVal Original_illness14 As Boolean, _
                    ByVal Original_illness15 As Boolean, _
                    ByVal Original_illness16 As Boolean, _
                    ByVal Original_illness17 As Boolean, _
                    ByVal Original_illness18 As Boolean, _
                    ByVal Original_illness19 As Boolean, _
                    ByVal Original_illness20 As Boolean, _
                    ByVal Original_hcpid As String, _
                    ByVal Original_hcpname As String, _
                    ByVal Original_hcpaddress As String, _
                    ByVal Original_hcplga As String, _
                    ByVal Original_sectortype As String, _
                    ByVal Original_hplan As String, _
                    ByVal Original_pnetwork As String, _
                    ByVal Original_ugplan As String, _
                    ByVal Original_ugmfees As Decimal, _
                    ByVal Original_ugyfees As Decimal, _
                    ByVal Original_ugstodate As Decimal, _
                    ByVal Original_ugbalance As Decimal) As Integer
            If (Original_enrolleeid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_enrolleeid")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_enrolleeid, String)
            End If
            If (Original_Surname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Surname")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Surname, String)
            End If
            If (Original_Firstname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Firstname")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Firstname, String)
            End If
            If (Original_othernames Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_othernames")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_othernames, String)
            End If
            If (Original_sex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sex")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_sex, String)
            End If
            If (Original_Maritalstatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Maritalstatus")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Maritalstatus, String)
            End If
            If (Original_title Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_title")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_title, String)
            End If
            If (Original_haddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_haddress")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_haddress, String)
            End If
            If (Original_age Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_age")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_age, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_dofb, Date)
            If (Original_tel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tel")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_tel, String)
            End If
            If (Original_email Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_email")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_email, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_dregister, Date)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_sdate, Date)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_edate, Date)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_active, Boolean)
            If (Original_nationalid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nationalid")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_nationalid, String)
            End If
            If (Original_NHIS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NHIS")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_NHIS, String)
            End If
            If (Original_ogaid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ogaid")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_ogaid, String)
            End If
            If (Original_ogaloc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ogaloc")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_ogaloc, String)
            End If
            If (Original_ppicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ppicture")
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_ppicture, String)
            End If
            If (Original_spicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_spicture")
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_spicture, String)
            End If
            If (Original_childpix1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix1")
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_childpix1, String)
            End If
            If (Original_childpix2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix2")
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_childpix2, String)
            End If
            If (Original_childpix3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix3")
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_childpix3, String)
            End If
            If (Original_childpix4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix4")
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_childpix4, String)
            End If
            If (Original_otherillness Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_otherillness")
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_otherillness, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_illness1, Boolean)
            Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_illness2, Boolean)
            Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_illness3, Boolean)
            Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_illness4, Boolean)
            Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_illness5, Boolean)
            Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_illness6, Boolean)
            Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_illness7, Boolean)
            Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_illness8, Boolean)
            Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_illness9, Boolean)
            Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_illness10, Boolean)
            Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_illness11, Boolean)
            Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_illness12, Boolean)
            Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_illness13, Boolean)
            Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_illness14, Boolean)
            Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_illness15, Boolean)
            Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_illness16, Boolean)
            Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_illness17, Boolean)
            Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_illness18, Boolean)
            Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_illness19, Boolean)
            Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_illness20, Boolean)
            If (Original_hcpid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcpid")
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_hcpid, String)
            End If
            If (Original_hcpname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcpname")
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_hcpname, String)
            End If
            If (Original_hcpaddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcpaddress")
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_hcpaddress, String)
            End If
            If (Original_hcplga Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcplga")
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_hcplga, String)
            End If
            If (Original_sectortype Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sectortype")
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_sectortype, String)
            End If
            If (Original_hplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hplan")
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_hplan, String)
            End If
            If (Original_pnetwork Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pnetwork")
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_pnetwork, String)
            End If
            If (Original_ugplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ugplan")
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_ugplan, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_ugmfees, Decimal)
            Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_ugyfees, Decimal)
            Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_ugstodate, Decimal)
            Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0, Object)
            Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_ugbalance, Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal enrolleeid As String, _
                    ByVal Surname As String, _
                    ByVal Firstname As String, _
                    ByVal othernames As String, _
                    ByVal sex As String, _
                    ByVal Maritalstatus As String, _
                    ByVal title As String, _
                    ByVal haddress As String, _
                    ByVal age As String, _
                    ByVal dofb As Date, _
                    ByVal tel As String, _
                    ByVal email As String, _
                    ByVal dregister As Date, _
                    ByVal sdate As Date, _
                    ByVal edate As Date, _
                    ByVal active As Boolean, _
                    ByVal nationalid As String, _
                    ByVal NHIS As String, _
                    ByVal ogaid As String, _
                    ByVal ogaloc As String, _
                    ByVal ppicture As String, _
                    ByVal spicture As String, _
                    ByVal childpix1 As String, _
                    ByVal childpix2 As String, _
                    ByVal childpix3 As String, _
                    ByVal childpix4 As String, _
                    ByVal otherillness As String, _
                    ByVal illness1 As Boolean, _
                    ByVal illness2 As Boolean, _
                    ByVal illness3 As Boolean, _
                    ByVal illness4 As Boolean, _
                    ByVal illness5 As Boolean, _
                    ByVal illness6 As Boolean, _
                    ByVal illness7 As Boolean, _
                    ByVal illness8 As Boolean, _
                    ByVal illness9 As Boolean, _
                    ByVal illness10 As Boolean, _
                    ByVal illness11 As Boolean, _
                    ByVal illness12 As Boolean, _
                    ByVal illness13 As Boolean, _
                    ByVal illness14 As Boolean, _
                    ByVal illness15 As Boolean, _
                    ByVal illness16 As Boolean, _
                    ByVal illness17 As Boolean, _
                    ByVal illness18 As Boolean, _
                    ByVal illness19 As Boolean, _
                    ByVal illness20 As Boolean, _
                    ByVal hcpid As String, _
                    ByVal hcpname As String, _
                    ByVal hcpaddress As String, _
                    ByVal hcplga As String, _
                    ByVal sectortype As String, _
                    ByVal hplan As String, _
                    ByVal pnetwork As String, _
                    ByVal ugplan As String, _
                    ByVal ugmfees As Decimal, _
                    ByVal ugyfees As Decimal, _
                    ByVal ugstodate As Decimal, _
                    ByVal ugbalance As Decimal) As Integer
            If (enrolleeid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("enrolleeid")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(enrolleeid, String)
            End If
            If (Surname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Surname")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Surname, String)
            End If
            If (Firstname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Firstname")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Firstname, String)
            End If
            If (othernames Is Nothing) Then
                Throw New Global.System.ArgumentNullException("othernames")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(othernames, String)
            End If
            If (sex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sex")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(sex, String)
            End If
            If (Maritalstatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Maritalstatus")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Maritalstatus, String)
            End If
            If (title Is Nothing) Then
                Throw New Global.System.ArgumentNullException("title")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(title, String)
            End If
            If (haddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("haddress")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(haddress, String)
            End If
            If (age Is Nothing) Then
                Throw New Global.System.ArgumentNullException("age")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(age, String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(dofb, Date)
            If (tel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tel")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(tel, String)
            End If
            If (email Is Nothing) Then
                Throw New Global.System.ArgumentNullException("email")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(email, String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(dregister, Date)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(sdate, Date)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(edate, Date)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(active, Boolean)
            If (nationalid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nationalid")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(nationalid, String)
            End If
            If (NHIS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NHIS")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(NHIS, String)
            End If
            If (ogaid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ogaid")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ogaid, String)
            End If
            If (ogaloc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ogaloc")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ogaloc, String)
            End If
            If (ppicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ppicture")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ppicture, String)
            End If
            If (spicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("spicture")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(spicture, String)
            End If
            If (childpix1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix1")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(childpix1, String)
            End If
            If (childpix2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix2")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(childpix2, String)
            End If
            If (childpix3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix3")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(childpix3, String)
            End If
            If (childpix4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix4")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(childpix4, String)
            End If
            If (otherillness Is Nothing) Then
                Throw New Global.System.ArgumentNullException("otherillness")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(otherillness, String)
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(illness1, Boolean)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(illness2, Boolean)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(illness3, Boolean)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(illness4, Boolean)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(illness5, Boolean)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(illness6, Boolean)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(illness7, Boolean)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(illness8, Boolean)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(illness9, Boolean)
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(illness10, Boolean)
            Me.Adapter.InsertCommand.Parameters(37).Value = CType(illness11, Boolean)
            Me.Adapter.InsertCommand.Parameters(38).Value = CType(illness12, Boolean)
            Me.Adapter.InsertCommand.Parameters(39).Value = CType(illness13, Boolean)
            Me.Adapter.InsertCommand.Parameters(40).Value = CType(illness14, Boolean)
            Me.Adapter.InsertCommand.Parameters(41).Value = CType(illness15, Boolean)
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(illness16, Boolean)
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(illness17, Boolean)
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(illness18, Boolean)
            Me.Adapter.InsertCommand.Parameters(45).Value = CType(illness19, Boolean)
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(illness20, Boolean)
            If (hcpid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcpid")
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(hcpid, String)
            End If
            If (hcpname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcpname")
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(hcpname, String)
            End If
            If (hcpaddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcpaddress")
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(hcpaddress, String)
            End If
            If (hcplga Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcplga")
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(hcplga, String)
            End If
            If (sectortype Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sectortype")
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(sectortype, String)
            End If
            If (hplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hplan")
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(hplan, String)
            End If
            If (pnetwork Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pnetwork")
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(pnetwork, String)
            End If
            If (ugplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ugplan")
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(ugplan, String)
            End If
            Me.Adapter.InsertCommand.Parameters(55).Value = CType(ugmfees, Decimal)
            Me.Adapter.InsertCommand.Parameters(56).Value = CType(ugyfees, Decimal)
            Me.Adapter.InsertCommand.Parameters(57).Value = CType(ugstodate, Decimal)
            Me.Adapter.InsertCommand.Parameters(58).Value = CType(ugbalance, Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal enrolleeid As String, _
                    ByVal Surname As String, _
                    ByVal Firstname As String, _
                    ByVal othernames As String, _
                    ByVal sex As String, _
                    ByVal Maritalstatus As String, _
                    ByVal title As String, _
                    ByVal haddress As String, _
                    ByVal age As String, _
                    ByVal dofb As Date, _
                    ByVal tel As String, _
                    ByVal email As String, _
                    ByVal dregister As Date, _
                    ByVal sdate As Date, _
                    ByVal edate As Date, _
                    ByVal active As Boolean, _
                    ByVal nationalid As String, _
                    ByVal NHIS As String, _
                    ByVal ogaid As String, _
                    ByVal ogaloc As String, _
                    ByVal ppicture As String, _
                    ByVal spicture As String, _
                    ByVal childpix1 As String, _
                    ByVal childpix2 As String, _
                    ByVal childpix3 As String, _
                    ByVal childpix4 As String, _
                    ByVal otherillness As String, _
                    ByVal illness1 As Boolean, _
                    ByVal illness2 As Boolean, _
                    ByVal illness3 As Boolean, _
                    ByVal illness4 As Boolean, _
                    ByVal illness5 As Boolean, _
                    ByVal illness6 As Boolean, _
                    ByVal illness7 As Boolean, _
                    ByVal illness8 As Boolean, _
                    ByVal illness9 As Boolean, _
                    ByVal illness10 As Boolean, _
                    ByVal illness11 As Boolean, _
                    ByVal illness12 As Boolean, _
                    ByVal illness13 As Boolean, _
                    ByVal illness14 As Boolean, _
                    ByVal illness15 As Boolean, _
                    ByVal illness16 As Boolean, _
                    ByVal illness17 As Boolean, _
                    ByVal illness18 As Boolean, _
                    ByVal illness19 As Boolean, _
                    ByVal illness20 As Boolean, _
                    ByVal hcpid As String, _
                    ByVal hcpname As String, _
                    ByVal hcpaddress As String, _
                    ByVal hcplga As String, _
                    ByVal sectortype As String, _
                    ByVal hplan As String, _
                    ByVal pnetwork As String, _
                    ByVal ugplan As String, _
                    ByVal ugmfees As Decimal, _
                    ByVal ugyfees As Decimal, _
                    ByVal ugstodate As Decimal, _
                    ByVal ugbalance As Decimal, _
                    ByVal Original_enrolleeid As String, _
                    ByVal Original_Surname As String, _
                    ByVal Original_Firstname As String, _
                    ByVal Original_othernames As String, _
                    ByVal Original_sex As String, _
                    ByVal Original_Maritalstatus As String, _
                    ByVal Original_title As String, _
                    ByVal Original_haddress As String, _
                    ByVal Original_age As String, _
                    ByVal Original_dofb As Date, _
                    ByVal Original_tel As String, _
                    ByVal Original_email As String, _
                    ByVal Original_dregister As Date, _
                    ByVal Original_sdate As Date, _
                    ByVal Original_edate As Date, _
                    ByVal Original_active As Boolean, _
                    ByVal Original_nationalid As String, _
                    ByVal Original_NHIS As String, _
                    ByVal Original_ogaid As String, _
                    ByVal Original_ogaloc As String, _
                    ByVal Original_ppicture As String, _
                    ByVal Original_spicture As String, _
                    ByVal Original_childpix1 As String, _
                    ByVal Original_childpix2 As String, _
                    ByVal Original_childpix3 As String, _
                    ByVal Original_childpix4 As String, _
                    ByVal Original_otherillness As String, _
                    ByVal Original_illness1 As Boolean, _
                    ByVal Original_illness2 As Boolean, _
                    ByVal Original_illness3 As Boolean, _
                    ByVal Original_illness4 As Boolean, _
                    ByVal Original_illness5 As Boolean, _
                    ByVal Original_illness6 As Boolean, _
                    ByVal Original_illness7 As Boolean, _
                    ByVal Original_illness8 As Boolean, _
                    ByVal Original_illness9 As Boolean, _
                    ByVal Original_illness10 As Boolean, _
                    ByVal Original_illness11 As Boolean, _
                    ByVal Original_illness12 As Boolean, _
                    ByVal Original_illness13 As Boolean, _
                    ByVal Original_illness14 As Boolean, _
                    ByVal Original_illness15 As Boolean, _
                    ByVal Original_illness16 As Boolean, _
                    ByVal Original_illness17 As Boolean, _
                    ByVal Original_illness18 As Boolean, _
                    ByVal Original_illness19 As Boolean, _
                    ByVal Original_illness20 As Boolean, _
                    ByVal Original_hcpid As String, _
                    ByVal Original_hcpname As String, _
                    ByVal Original_hcpaddress As String, _
                    ByVal Original_hcplga As String, _
                    ByVal Original_sectortype As String, _
                    ByVal Original_hplan As String, _
                    ByVal Original_pnetwork As String, _
                    ByVal Original_ugplan As String, _
                    ByVal Original_ugmfees As Decimal, _
                    ByVal Original_ugyfees As Decimal, _
                    ByVal Original_ugstodate As Decimal, _
                    ByVal Original_ugbalance As Decimal) As Integer
            If (enrolleeid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("enrolleeid")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(enrolleeid, String)
            End If
            If (Surname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Surname")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Surname, String)
            End If
            If (Firstname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Firstname")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Firstname, String)
            End If
            If (othernames Is Nothing) Then
                Throw New Global.System.ArgumentNullException("othernames")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(othernames, String)
            End If
            If (sex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sex")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(sex, String)
            End If
            If (Maritalstatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Maritalstatus")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Maritalstatus, String)
            End If
            If (title Is Nothing) Then
                Throw New Global.System.ArgumentNullException("title")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(title, String)
            End If
            If (haddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("haddress")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(haddress, String)
            End If
            If (age Is Nothing) Then
                Throw New Global.System.ArgumentNullException("age")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(age, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(dofb, Date)
            If (tel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tel")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(tel, String)
            End If
            If (email Is Nothing) Then
                Throw New Global.System.ArgumentNullException("email")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(email, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(dregister, Date)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(sdate, Date)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(edate, Date)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(active, Boolean)
            If (nationalid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nationalid")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(nationalid, String)
            End If
            If (NHIS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NHIS")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(NHIS, String)
            End If
            If (ogaid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ogaid")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ogaid, String)
            End If
            If (ogaloc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ogaloc")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ogaloc, String)
            End If
            If (ppicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ppicture")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ppicture, String)
            End If
            If (spicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("spicture")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(spicture, String)
            End If
            If (childpix1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix1")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(childpix1, String)
            End If
            If (childpix2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix2")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(childpix2, String)
            End If
            If (childpix3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix3")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(childpix3, String)
            End If
            If (childpix4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("childpix4")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(childpix4, String)
            End If
            If (otherillness Is Nothing) Then
                Throw New Global.System.ArgumentNullException("otherillness")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(otherillness, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(illness1, Boolean)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(illness2, Boolean)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(illness3, Boolean)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(illness4, Boolean)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(illness5, Boolean)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(illness6, Boolean)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(illness7, Boolean)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(illness8, Boolean)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(illness9, Boolean)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(illness10, Boolean)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(illness11, Boolean)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(illness12, Boolean)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(illness13, Boolean)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(illness14, Boolean)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(illness15, Boolean)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(illness16, Boolean)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(illness17, Boolean)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(illness18, Boolean)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(illness19, Boolean)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(illness20, Boolean)
            If (hcpid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcpid")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(hcpid, String)
            End If
            If (hcpname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcpname")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(hcpname, String)
            End If
            If (hcpaddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcpaddress")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(hcpaddress, String)
            End If
            If (hcplga Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hcplga")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(hcplga, String)
            End If
            If (sectortype Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sectortype")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(sectortype, String)
            End If
            If (hplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hplan")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(hplan, String)
            End If
            If (pnetwork Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pnetwork")
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(pnetwork, String)
            End If
            If (ugplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ugplan")
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(ugplan, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(ugmfees, Decimal)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(ugyfees, Decimal)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(ugstodate, Decimal)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(ugbalance, Decimal)
            If (Original_enrolleeid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_enrolleeid")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_enrolleeid, String)
            End If
            If (Original_Surname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Surname")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Surname, String)
            End If
            If (Original_Firstname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Firstname")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Firstname, String)
            End If
            If (Original_othernames Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_othernames")
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_othernames, String)
            End If
            If (Original_sex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sex")
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_sex, String)
            End If
            If (Original_Maritalstatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Maritalstatus")
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_Maritalstatus, String)
            End If
            If (Original_title Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_title")
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_title, String)
            End If
            If (Original_haddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_haddress")
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_haddress, String)
            End If
            If (Original_age Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_age")
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_age, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_dofb, Date)
            If (Original_tel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tel")
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_tel, String)
            End If
            If (Original_email Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_email")
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_email, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_dregister, Date)
            Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_sdate, Date)
            Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_edate, Date)
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_active, Boolean)
            If (Original_nationalid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nationalid")
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_nationalid, String)
            End If
            If (Original_NHIS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NHIS")
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_NHIS, String)
            End If
            If (Original_ogaid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ogaid")
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_ogaid, String)
            End If
            If (Original_ogaloc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ogaloc")
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_ogaloc, String)
            End If
            If (Original_ppicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ppicture")
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_ppicture, String)
            End If
            If (Original_spicture Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_spicture")
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_spicture, String)
            End If
            If (Original_childpix1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix1")
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_childpix1, String)
            End If
            If (Original_childpix2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix2")
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_childpix2, String)
            End If
            If (Original_childpix3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix3")
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_childpix3, String)
            End If
            If (Original_childpix4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_childpix4")
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_childpix4, String)
            End If
            If (Original_otherillness Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_otherillness")
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_otherillness, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_illness1, Boolean)
            Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_illness2, Boolean)
            Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_illness3, Boolean)
            Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_illness4, Boolean)
            Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_illness5, Boolean)
            Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_illness6, Boolean)
            Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_illness7, Boolean)
            Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_illness8, Boolean)
            Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_illness9, Boolean)
            Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_illness10, Boolean)
            Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_illness11, Boolean)
            Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_illness12, Boolean)
            Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_illness13, Boolean)
            Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_illness14, Boolean)
            Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_illness15, Boolean)
            Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_illness16, Boolean)
            Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_illness17, Boolean)
            Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_illness18, Boolean)
            Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_illness19, Boolean)
            Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_illness20, Boolean)
            If (Original_hcpid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcpid")
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_hcpid, String)
            End If
            If (Original_hcpname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcpname")
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_hcpname, String)
            End If
            If (Original_hcpaddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcpaddress")
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_hcpaddress, String)
            End If
            If (Original_hcplga Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hcplga")
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_hcplga, String)
            End If
            If (Original_sectortype Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sectortype")
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_sectortype, String)
            End If
            If (Original_hplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_hplan")
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_hplan, String)
            End If
            If (Original_pnetwork Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pnetwork")
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_pnetwork, String)
            End If
            If (Original_ugplan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ugplan")
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_ugplan, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_ugmfees, Decimal)
            Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_ugyfees, Decimal)
            Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_ugstodate, Decimal)
            Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0, Object)
            Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_ugbalance, Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal Surname As String, _
                    ByVal Firstname As String, _
                    ByVal othernames As String, _
                    ByVal sex As String, _
                    ByVal Maritalstatus As String, _
                    ByVal title As String, _
                    ByVal haddress As String, _
                    ByVal age As String, _
                    ByVal dofb As Date, _
                    ByVal tel As String, _
                    ByVal email As String, _
                    ByVal dregister As Date, _
                    ByVal sdate As Date, _
                    ByVal edate As Date, _
                    ByVal active As Boolean, _
                    ByVal nationalid As String, _
                    ByVal NHIS As String, _
                    ByVal ogaid As String, _
                    ByVal ogaloc As String, _
                    ByVal ppicture As String, _
                    ByVal spicture As String, _
                    ByVal childpix1 As String, _
                    ByVal childpix2 As String, _
                    ByVal childpix3 As String, _
                    ByVal childpix4 As String, _
                    ByVal otherillness As String, _
                    ByVal illness1 As Boolean, _
                    ByVal illness2 As Boolean, _
                    ByVal illness3 As Boolean, _
                    ByVal illness4 As Boolean, _
                    ByVal illness5 As Boolean, _
                    ByVal illness6 As Boolean, _
                    ByVal illness7 As Boolean, _
                    ByVal illness8 As Boolean, _
                    ByVal illness9 As Boolean, _
                    ByVal illness10 As Boolean, _
                    ByVal illness11 As Boolean, _
                    ByVal illness12 As Boolean, _
                    ByVal illness13 As Boolean, _
                    ByVal illness14 As Boolean, _
                    ByVal illness15 As Boolean, _
                    ByVal illness16 As Boolean, _
                    ByVal illness17 As Boolean, _
                    ByVal illness18 As Boolean, _
                    ByVal illness19 As Boolean, _
                    ByVal illness20 As Boolean, _
                    ByVal hcpid As String, _
                    ByVal hcpname As String, _
                    ByVal hcpaddress As String, _
                    ByVal hcplga As String, _
                    ByVal sectortype As String, _
                    ByVal hplan As String, _
                    ByVal pnetwork As String, _
                    ByVal ugplan As String, _
                    ByVal ugmfees As Decimal, _
                    ByVal ugyfees As Decimal, _
                    ByVal ugstodate As Decimal, _
                    ByVal ugbalance As Decimal, _
                    ByVal Original_enrolleeid As String, _
                    ByVal Original_Surname As String, _
                    ByVal Original_Firstname As String, _
                    ByVal Original_othernames As String, _
                    ByVal Original_sex As String, _
                    ByVal Original_Maritalstatus As String, _
                    ByVal Original_title As String, _
                    ByVal Original_haddress As String, _
                    ByVal Original_age As String, _
                    ByVal Original_dofb As Date, _
                    ByVal Original_tel As String, _
                    ByVal Original_email As String, _
                    ByVal Original_dregister As Date, _
                    ByVal Original_sdate As Date, _
                    ByVal Original_edate As Date, _
                    ByVal Original_active As Boolean, _
                    ByVal Original_nationalid As String, _
                    ByVal Original_NHIS As String, _
                    ByVal Original_ogaid As String, _
                    ByVal Original_ogaloc As String, _
                    ByVal Original_ppicture As String, _
                    ByVal Original_spicture As String, _
                    ByVal Original_childpix1 As String, _
                    ByVal Original_childpix2 As String, _
                    ByVal Original_childpix3 As String, _
                    ByVal Original_childpix4 As String, _
                    ByVal Original_otherillness As String, _
                    ByVal Original_illness1 As Boolean, _
                    ByVal Original_illness2 As Boolean, _
                    ByVal Original_illness3 As Boolean, _
                    ByVal Original_illness4 As Boolean, _
                    ByVal Original_illness5 As Boolean, _
                    ByVal Original_illness6 As Boolean, _
                    ByVal Original_illness7 As Boolean, _
                    ByVal Original_illness8 As Boolean, _
                    ByVal Original_illness9 As Boolean, _
                    ByVal Original_illness10 As Boolean, _
                    ByVal Original_illness11 As Boolean, _
                    ByVal Original_illness12 As Boolean, _
                    ByVal Original_illness13 As Boolean, _
                    ByVal Original_illness14 As Boolean, _
                    ByVal Original_illness15 As Boolean, _
                    ByVal Original_illness16 As Boolean, _
                    ByVal Original_illness17 As Boolean, _
                    ByVal Original_illness18 As Boolean, _
                    ByVal Original_illness19 As Boolean, _
                    ByVal Original_illness20 As Boolean, _
                    ByVal Original_hcpid As String, _
                    ByVal Original_hcpname As String, _
                    ByVal Original_hcpaddress As String, _
                    ByVal Original_hcplga As String, _
                    ByVal Original_sectortype As String, _
                    ByVal Original_hplan As String, _
                    ByVal Original_pnetwork As String, _
                    ByVal Original_ugplan As String, _
                    ByVal Original_ugmfees As Decimal, _
                    ByVal Original_ugyfees As Decimal, _
                    ByVal Original_ugstodate As Decimal, _
                    ByVal Original_ugbalance As Decimal) As Integer
            Return Me.Update(Original_enrolleeid, Surname, Firstname, othernames, sex, Maritalstatus, title, haddress, age, dofb, tel, email, dregister, sdate, edate, active, nationalid, NHIS, ogaid, ogaloc, ppicture, spicture, childpix1, childpix2, childpix3, childpix4, otherillness, illness1, illness2, illness3, illness4, illness5, illness6, illness7, illness8, illness9, illness10, illness11, illness12, illness13, illness14, illness15, illness16, illness17, illness18, illness19, illness20, hcpid, hcpname, hcpaddress, hcplga, sectortype, hplan, pnetwork, ugplan, ugmfees, ugyfees, ugstodate, ugbalance, Original_enrolleeid, Original_Surname, Original_Firstname, Original_othernames, Original_sex, Original_Maritalstatus, Original_title, Original_haddress, Original_age, Original_dofb, Original_tel, Original_email, Original_dregister, Original_sdate, Original_edate, Original_active, Original_nationalid, Original_NHIS, Original_ogaid, Original_ogaloc, Original_ppicture, Original_spicture, Original_childpix1, Original_childpix2, Original_childpix3, Original_childpix4, Original_otherillness, Original_illness1, Original_illness2, Original_illness3, Original_illness4, Original_illness5, Original_illness6, Original_illness7, Original_illness8, Original_illness9, Original_illness10, Original_illness11, Original_illness12, Original_illness13, Original_illness14, Original_illness15, Original_illness16, Original_illness17, Original_illness18, Original_illness19, Original_illness20, Original_hcpid, Original_hcpname, Original_hcpaddress, Original_hcplga, Original_sectortype, Original_hplan, Original_pnetwork, Original_ugplan, Original_ugmfees, Original_ugyfees, Original_ugstodate, Original_ugbalance)
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _enrolleetabTableAdapter As enrolleetabTableAdapter

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set(value As UpdateOrderOption)
                Me._updateOrder = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" & _
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" & _
            "a", "System.Drawing.Design.UITypeEditor")> _
        Public Property enrolleetabTableAdapter() As enrolleetabTableAdapter
            Get
                Return Me._enrolleetabTableAdapter
            End Get
            Set(value As enrolleetabTableAdapter)
                Me._enrolleetabTableAdapter = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set(value As Boolean)
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._enrolleetabTableAdapter) Is Nothing) _
                            AndAlso (Not (Me._enrolleetabTableAdapter.Connection) Is Nothing)) Then
                    Return Me._enrolleetabTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set(value As Global.System.Data.IDbConnection)
                Me._connection = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._enrolleetabTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateUpdatedRows(ByVal dataSet As Enrolleeallset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._enrolleetabTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.enrolleetab.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing) _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._enrolleetabTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateInsertedRows(ByVal dataSet As Enrolleeallset, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._enrolleetabTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.enrolleetab.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing) _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._enrolleetabTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateDeletedRows(ByVal dataSet As Enrolleeallset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._enrolleetabTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.enrolleetab.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing) _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._enrolleetabTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function UpdateAll(ByVal dataSet As Enrolleeallset) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            If ((Not (Me._enrolleetabTableAdapter) Is Nothing) _
                        AndAlso (Me.MatchTableAdapterConnection(Me._enrolleetabTableAdapter.Connection) = False)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" & _
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" & _
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close()
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open()
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" & _
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                If (Not (Me._enrolleetabTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._enrolleetabTableAdapter, Me._enrolleetabTableAdapter.Connection)
                    Me._enrolleetabTableAdapter.Connection = CType(workConnection, Global.System.Data.Odbc.OdbcConnection)
                    Me._enrolleetabTableAdapter.Transaction = CType(workTransaction, Global.System.Data.Odbc.OdbcTransaction)
                    If Me._enrolleetabTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._enrolleetabTableAdapter.Adapter.AcceptChangesDuringUpdate = False
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._enrolleetabTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit()
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback()
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear()
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges()
                            row.SetAdded()
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close()
                End If
                If (Not (Me._enrolleetabTableAdapter) Is Nothing) Then
                    Me._enrolleetabTableAdapter.Connection = CType(revertConnections(Me._enrolleetabTableAdapter), Global.System.Data.Odbc.OdbcConnection)
                    Me._enrolleetabTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New()
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear()
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
